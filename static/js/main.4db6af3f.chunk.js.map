{"version":3,"sources":["img/Logo.png","components/Navbar/NavBar.jsx","components/Home/Home.jsx","components/Quiz/Quiz.jsx","img/interrogation.png","components/Informations/ModalInfo.jsx","components/Informations/Card.jsx","components/Informations/Filter.jsx","components/Informations/CardsList.jsx","components/Informations/Pagination.jsx","components/Informations/SearchBarName.jsx","components/Informations/Informations.jsx","App.jsx","index.jsx"],"names":["Navbar","className","to","src","logo","alt","activeClassName","Home","Quiz","ModalInfo","hideModal","image","name","alignment","stats","publisher","gender","race","weight","height","fullName","placeOfBirth","firstAppearance","groupAffiliation","statsNamesArray","Object","keys","statsValuesArray","values","statsArray","i","length","push","toUpperCase","headerClass","ali","onClick","onKeyPress","role","tabIndex","type","onError","e","target","onerror","imgReplace","map","stat","index","includes","replace","Card","useState","toggleModal","setToggleModal","Filter","setFilter","filter","response","onChange","value","element","id","CardsList","hero","isLoading","searchName","setByPublisher","setGender","setRace","setAlignment","byPublisher","allRaces","allPublishers","allGenders","allAlignments","el","biography","appearance","toLowerCase","url","powerstats","connections","Pagination","cardsPerPage","totalCards","paginate","currentPage","pageNumbers","Math","ceil","number","SearchbarName","handleChange","htmlFor","placeholder","Informations","setHero","setIsLoading","setCurrentPage","setCardsPerPage","indexOfLastCard","indexOfFirstCard","currentHero","slice","setSearchName","useEffect","fetchData","a","axios","get","then","data","results","pageNumber","document","documentElement","scrollTop","App","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4db6af3f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo.b43d2c16.png\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport logo from '../../img/Logo.png';\nimport './navbar.css';\n\nconst Navbar = () => {\n  return (\n    <header className=\"header\">\n      <div className=\"header-content\">\n        <NavLink to=\"/\" className=\"logo-content\">\n          <img src={logo} className=\"logo\" alt=\"Logo\" />\n        </NavLink>\n        <div className=\"title\">\n          <h1>WILD HEROES</h1>\n        </div>\n        <div className=\"header-content-link\">\n          <NavLink\n            activeClassName=\"text-nav-active\"\n            className=\"text-nav\"\n            to=\"/quiz\"\n          >\n            Quiz\n          </NavLink>\n          <NavLink\n            activeClassName=\"text-nav-active\"\n            className=\"text-nav\"\n            to=\"/informations\"\n          >\n            Informations\n          </NavLink>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\n\nconst Home = () => {\n  return <div> </div>;\n};\nexport default Home;\n","import React from 'react';\n\nconst Quiz = () => {\n  return <div> </div>;\n};\nexport default Quiz;\n","export default __webpack_public_path__ + \"static/media/interrogation.1ab396b5.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport imgReplace from '../../img/interrogation.png';\nimport './modalinfo.css';\n\nconst ModalInfo = ({\n  hideModal,\n  image,\n  name,\n  alignment,\n  stats,\n  publisher,\n  gender,\n  race,\n  weight,\n  height,\n  fullName,\n  placeOfBirth,\n  firstAppearance,\n  groupAffiliation,\n}) => {\n  // gathering keys and values of the 'stats' object and putting it in a 'statsArray' array\n  const statsNamesArray = Object.keys(stats);\n  const statsValuesArray = Object.values(stats);\n\n  const statsArray = [];\n  for (let i = 0; i < statsNamesArray.length; i += 1) {\n    statsArray.push(statsNamesArray[i].toUpperCase());\n    statsArray.push(statsValuesArray[i]);\n  }\n  const headerClass = (ali) => {\n    let headerAliClass = '';\n    if (ali === 'good') {\n      headerAliClass = 'good-hero';\n    } else if (ali === 'bad') {\n      headerAliClass = 'bad-hero';\n    } else {\n      headerAliClass = 'neutral-hero';\n    }\n    return headerAliClass;\n  };\n\n  return (\n    <div className=\"modal-container\">\n      <div\n        className=\"modal-background\"\n        onClick={() => hideModal()}\n        onKeyPress={() => hideModal()}\n        role=\"button\"\n        tabIndex={0}\n      >\n        {' '}\n      </div>\n      <div className={`modal-content ${headerClass(alignment)}`}>\n        <button\n          type=\"button\"\n          className=\"close-modal-button\"\n          onClick={() => hideModal()}\n        >\n          &times;\n        </button>\n        <div className={`modal-header ${headerClass(alignment)}`}>\n          <h1>{name}</h1>\n        </div>\n        <div className=\"modal-body\">\n          <div className=\"modal-card\">\n            <img\n              src={image}\n              onError={(e) => {\n                e.target.onerror = null;\n                e.target.src = imgReplace;\n              }}\n              alt={name}\n              className=\"modal-img\"\n            />\n          </div>\n          <div className=\"modal-stats\">\n            <h1>Statistics</h1>\n            <ul className=\"stats-list\">\n              {statsArray.map((stat, index) => (\n                <li key={[index]}>\n                  {stat.includes('null')\n                    ? stat.replace('null', 'Unknown')\n                    : stat}\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div className=\"modal-bio\">\n            <h1>Information</h1>\n            <ul className=\"bio-list\">\n              {fullName !== '' ? (\n                <li>\n                  <strong>\n                    Full name\n                    <br />\n                  </strong>{' '}\n                  {fullName}{' '}\n                </li>\n              ) : (\n                ''\n              )}\n              {gender !== '-' ? (\n                <li>\n                  {' '}\n                  <strong>\n                    Gender\n                    <br />\n                  </strong>{' '}\n                  {gender}{' '}\n                </li>\n              ) : (\n                ''\n              )}\n              {race !== 'null' ? (\n                <li>\n                  {' '}\n                  <strong>\n                    Race\n                    <br />\n                  </strong>{' '}\n                  {race}{' '}\n                </li>\n              ) : (\n                ''\n              )}\n              {weight !== '0 kg' && height !== '0 cm' ? (\n                <li>\n                  {' '}\n                  <strong>\n                    Weight and height\n                    <br />\n                  </strong>{' '}\n                  {weight}, {height}{' '}\n                </li>\n              ) : (\n                ''\n              )}\n              {placeOfBirth !== '-' ? (\n                <li>\n                  {' '}\n                  <strong>\n                    Place of birth\n                    <br />\n                  </strong>{' '}\n                  {placeOfBirth}{' '}\n                </li>\n              ) : (\n                ''\n              )}\n              {publisher !== 'null' && publisher !== '' ? (\n                <li>\n                  {' '}\n                  <strong>\n                    Original publisher\n                    <br />\n                  </strong>{' '}\n                  {publisher}{' '}\n                </li>\n              ) : (\n                ''\n              )}\n              {firstAppearance !== '-' ? (\n                <li>\n                  {' '}\n                  <strong>\n                    First appearance\n                    <br />\n                  </strong>{' '}\n                  {firstAppearance}{' '}\n                </li>\n              ) : (\n                ''\n              )}\n              {groupAffiliation !== '-' ? (\n                <li>\n                  {' '}\n                  <strong>\n                    Affiliation\n                    <br />\n                  </strong>{' '}\n                  {groupAffiliation}{' '}\n                </li>\n              ) : (\n                ''\n              )}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nModalInfo.propTypes = {\n  stats: PropTypes.objectOf(PropTypes.string).isRequired,\n  hideModal: PropTypes.func.isRequired,\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  alignment: PropTypes.string.isRequired,\n  publisher: PropTypes.string.isRequired,\n  gender: PropTypes.string.isRequired,\n  race: PropTypes.string.isRequired,\n  weight: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  fullName: PropTypes.string.isRequired,\n  placeOfBirth: PropTypes.string.isRequired,\n  firstAppearance: PropTypes.string.isRequired,\n  groupAffiliation: PropTypes.string.isRequired,\n};\nexport default ModalInfo;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ModalInfo from './ModalInfo';\nimport imgReplace from '../../img/interrogation.png';\nimport './card.css';\n\nconst Card = ({\n  name,\n  image,\n  alignment,\n  stats,\n  publisher,\n  gender,\n  race,\n  weight,\n  height,\n  fullName,\n  placeOfBirth,\n  firstAppearance,\n  groupAffiliation,\n}) => {\n  const [toggleModal, setToggleModal] = useState(false);\n  const hideModal = () => {\n    setToggleModal(!toggleModal);\n  };\n  const colorClass = (ali) => {\n    let heroClass = '';\n    if (ali === 'good') {\n      heroClass = 'good-card';\n    } else if (ali === 'bad') {\n      heroClass = 'bad-card';\n    } else {\n      heroClass = 'normal-card';\n    }\n    return heroClass;\n  };\n  return (\n    <>\n      <div\n        className={`card ${colorClass(alignment)}`}\n        onClick={() => hideModal()}\n        onKeyPress={() => hideModal()}\n        role=\"button\"\n        tabIndex={0}\n      >\n        <img\n          src={image}\n          onError={(e) => {\n            e.target.onerror = null;\n            e.target.src = imgReplace;\n          }}\n          alt={name}\n        />\n        <h2>{name}</h2>\n      </div>\n      <div>\n        {toggleModal && (\n          <ModalInfo\n            name={name}\n            image={image}\n            toggleModal={toggleModal}\n            setToggleModal={setToggleModal}\n            hideModal={hideModal}\n            alignment={alignment}\n            stats={stats}\n            publisher={publisher}\n            gender={gender}\n            race={race}\n            weight={weight}\n            height={height}\n            fullName={fullName}\n            placeOfBirth={placeOfBirth}\n            firstAppearance={firstAppearance}\n            groupAffiliation={groupAffiliation}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nCard.propTypes = {\n  stats: PropTypes.objectOf(PropTypes.string).isRequired,\n  name: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  alignment: PropTypes.string.isRequired,\n  publisher: PropTypes.string.isRequired,\n  gender: PropTypes.string.isRequired,\n  race: PropTypes.string.isRequired,\n  weight: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  fullName: PropTypes.string.isRequired,\n  placeOfBirth: PropTypes.string.isRequired,\n  firstAppearance: PropTypes.string.isRequired,\n  groupAffiliation: PropTypes.string.isRequired,\n};\nexport default Card;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ setFilter, filter, response }) => {\n  return (\n    <div className=\"boxes\">\n      <select\n        className=\"comics-filter\"\n        onChange={(e) => setFilter(e.target.value)}\n      >\n        <option value=\"\"> {filter} </option>\n        {response.map((element) => (\n          <option key={element.id} value={element.name}>\n            {element.name}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  setFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n  response: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from './Card';\nimport './card.css';\nimport Filter from './Filter';\nimport './filter.css';\n\nconst CardsList = ({\n  hero,\n  isLoading,\n  searchName,\n  setByPublisher,\n  setGender,\n  setRace,\n  setAlignment,\n  byPublisher,\n  gender,\n  race,\n  alignment,\n  allRaces,\n  allPublishers,\n  allGenders,\n  allAlignments,\n}) => {\n  return (\n    <div className=\"cards-list\">\n      {isLoading ? (\n        <img\n          src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/da734b28921021.55d95297d71f4.gif\"\n          alt=\"loader\"\n          className=\"loader-cardsList\"\n        />\n      ) : (\n        <div className=\"container-cards-button\">\n          <div className=\"container-filter\">\n            <Filter\n              setFilter={setGender}\n              filter=\"by gender\"\n              response={allGenders}\n            />\n            <Filter\n              setFilter={setAlignment}\n              filter=\"by alignment\"\n              response={allAlignments}\n            />\n            <Filter\n              setFilter={setByPublisher}\n              filter=\"by publisher\"\n              response={allPublishers}\n            />\n            <Filter setFilter={setRace} filter=\"by race\" response={allRaces} />\n          </div>\n          <div className=\"container-cards\">\n            {hero\n              .filter((el) => el.biography.publisher.includes(byPublisher))\n              .filter((el) => el.appearance.gender.includes(gender))\n              .filter((el) => el.appearance.race.includes(race))\n              .filter((el) => el.biography.alignment.includes(alignment))\n              .filter((el) =>\n                el.name.toLowerCase().includes(searchName.toLowerCase())\n              )\n              .map((el) => (\n                <Card\n                  key={el.id}\n                  name={el.name}\n                  image={el.image.url}\n                  alignment={el.biography.alignment}\n                  stats={el.powerstats}\n                  publisher={el.biography.publisher}\n                  gender={el.appearance.gender}\n                  race={el.appearance.race}\n                  weight={el.appearance.weight[1]}\n                  height={el.appearance.height[1]}\n                  fullName={el.biography['full-name']}\n                  placeOfBirth={el.biography['place-of-birth']}\n                  firstAppearance={el.biography['first-appearance']}\n                  groupAffiliation={el.connections['group-affiliation']}\n                />\n              ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\nCardsList.propTypes = {\n  hero: PropTypes.arrayOf(PropTypes.object).isRequired,\n  allRaces: PropTypes.arrayOf(PropTypes.object).isRequired,\n  allPublishers: PropTypes.arrayOf(PropTypes.object).isRequired,\n  allGenders: PropTypes.arrayOf(PropTypes.object).isRequired,\n  allAlignments: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  searchName: PropTypes.string.isRequired,\n  setByPublisher: PropTypes.func.isRequired,\n  setGender: PropTypes.func.isRequired,\n  setRace: PropTypes.func.isRequired,\n  setAlignment: PropTypes.func.isRequired,\n  byPublisher: PropTypes.string.isRequired,\n  gender: PropTypes.string.isRequired,\n  race: PropTypes.string.isRequired,\n  alignment: PropTypes.string.isRequired,\n};\nexport default CardsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './pagination.css';\nimport { NavLink } from 'react-router-dom';\n\nconst Pagination = ({ cardsPerPage, totalCards, paginate, currentPage }) => {\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(totalCards / cardsPerPage); i += 1) {\n    pageNumbers.push(i);\n  }\n  return (\n    <nav className=\"nav-page\">\n      <p> {cardsPerPage < 31 && `Page: ${currentPage}`}</p>\n      <ul className=\"pagination\">\n        {pageNumbers.map(\n          (number) =>\n            cardsPerPage < 31 && (\n              <NavLink\n                key={number}\n                value={number}\n                to=\"/informations\"\n                className=\"page-link\"\n                onClick={() => {\n                  paginate(number);\n                }}\n              >\n                {number}\n              </NavLink>\n            )\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  cardsPerPage: PropTypes.number.isRequired,\n  totalCards: PropTypes.number.isRequired,\n  paginate: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './searchbarname.css';\n\nconst SearchbarName = ({ handleChange, searchName }) => {\n  return (\n    <div className=\"search\">\n      <label htmlFor=\"inputName\">\n        <input\n          className=\"inputName\"\n          type=\"text\"\n          value={searchName}\n          placeholder=\"Enter the name of a character\"\n          onChange={handleChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nSearchbarName.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  searchName: PropTypes.string.isRequired,\n};\n\nexport default SearchbarName;\n","import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport CardsList from './CardsList';\nimport Pagination from './Pagination';\nimport SearchbarName from './SearchBarName';\nimport './card.css';\n\nconst Informations = () => {\n  const [hero, setHero] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  // UseState for range page\n  const [currentPage, setCurrentPage] = useState(1);\n  // Number of Cards by page\n  const [cardsPerPage, setCardsPerPage] = useState(30);\n  // Filters\n  const [byPublisher, setByPublisher] = useState('');\n  const [gender, setGender] = useState('');\n  const [alignment, setAlignment] = useState('');\n  const [race, setRace] = useState('');\n  // Get current page\n  const indexOfLastCard = currentPage * cardsPerPage;\n  const indexOfFirstCard = indexOfLastCard - cardsPerPage;\n  const currentHero = hero.slice(indexOfFirstCard, indexOfLastCard);\n  // SearchBar\n  const [searchName, setSearchName] = useState('');\n  const handleChange = (e) => {\n    setSearchName(e.target.value);\n  };\n\n  const allRaces = [\n    { id: 0, name: 'Alien' },\n    { id: 1, name: 'Alpha' },\n    { id: 2, name: 'Amazon' },\n    { id: 3, name: 'Android' },\n    { id: 4, name: 'Atlantean' },\n    { id: 5, name: 'Bizarro' },\n    { id: 6, name: 'Black Racer' },\n    { id: 7, name: 'Cosmic Entity' },\n    { id: 8, name: 'Cyborg' },\n    { id: 9, name: 'Dathomirian Zabrak' },\n    { id: 10, name: 'Demon' },\n    { id: 11, name: 'God' },\n    { id: 12, name: 'Human' },\n    { id: 13, name: 'Icthyo Sapien' },\n    { id: 14, name: 'Inhuman' },\n    { id: 15, name: 'Kakarantharaian' },\n    { id: 16, name: 'Kryptonian' },\n    { id: 17, name: 'Metahuman' },\n    { id: 18, name: 'Mutant' },\n    { id: 19, name: 'Neyaphen' },\n    { id: 20, name: 'Symbiote' },\n    { id: 21, name: 'Ungaran' },\n    { id: 22, name: 'Vampire' },\n    { id: 23, name: 'Xenomorph' },\n  ];\n\n  const allPublishers = [\n    { id: 24, name: 'Marvel Comics' },\n    { id: 25, name: 'DC Comics' },\n    { id: 26, name: 'Image Comics' },\n    { id: 27, name: 'Dark Horse' },\n    { id: 28, name: 'NBC - Heroes' },\n    { id: 29, name: 'Sharon Carter' },\n    { id: 30, name: 'Wildstorm' },\n    { id: 31, name: 'Archangel' },\n    { id: 32, name: 'Tempest' },\n    { id: 33, name: 'Image Comics' },\n    { id: 34, name: 'Giant-Man' },\n    { id: 35, name: 'Toxin' },\n    { id: 36, name: 'Angel' },\n    { id: 37, name: 'Speedy' },\n    { id: 38, name: 'Goliath' },\n    { id: 39, name: 'Spectre' },\n    { id: 40, name: 'Oracle' },\n    { id: 41, name: 'Hawkfire' },\n    { id: 42, name: 'Huntress' },\n    { id: 43, name: 'Misfit' },\n    { id: 44, name: 'Spoiler' },\n    { id: 45, name: 'Nightwing' },\n    { id: 46, name: 'Icon Comics' },\n  ];\n\n  const allGenders = [\n    { id: 47, name: 'Male' },\n    { id: 48, name: 'Female' },\n  ];\n\n  const allAlignments = [\n    { id: 49, name: 'good' },\n    { id: 50, name: 'bad' },\n    { id: 51, name: 'neutral' },\n  ];\n\n  // Change page\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    document.documentElement.scrollTop = 0;\n  };\n\n  // Call the api and load image to waiting call\n  useEffect(() => {\n    const fetchData = async () => {\n      axios\n        .get(\"https://superheroapi.com/api.php/10216027606921557/search/'%20'\")\n        .then((response) => response.data.results)\n        .then((data) => {\n          setHero(data);\n          setIsLoading(false);\n        });\n    };\n    fetchData();\n  }, []);\n\n  // change the component according to search state\n  useEffect(() => {\n    if (\n      searchName !== '' ||\n      byPublisher !== '' ||\n      gender !== '' ||\n      race !== '' ||\n      alignment !== ''\n    ) {\n      setCurrentPage(1);\n      setCardsPerPage(hero.length);\n    }\n    return () => {\n      setCardsPerPage(30);\n    };\n  }, [searchName, byPublisher, gender, race, alignment]);\n\n  return (\n    <div>\n      <div>\n        <SearchbarName\n          searchName={searchName}\n          setSearchName={setSearchName}\n          handleChange={handleChange}\n        />\n      </div>\n      <CardsList\n        isLoading={isLoading}\n        searchName={searchName}\n        hero={currentHero}\n        byPublisher={byPublisher}\n        setByPublisher={setByPublisher}\n        gender={gender}\n        setGender={setGender}\n        alignment={alignment}\n        setAlignment={setAlignment}\n        race={race}\n        setRace={setRace}\n        allRaces={allRaces}\n        allPublishers={allPublishers}\n        allGenders={allGenders}\n        allAlignments={allAlignments}\n      />\n\n      <div className=\"container-pagination\">\n        <Pagination\n          currentPage={currentPage}\n          cardsPerPage={cardsPerPage}\n          totalCards={hero.length}\n          paginate={paginate}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Informations;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Navbar from './components/Navbar/NavBar';\nimport Home from './components/Home/Home';\nimport Quiz from './components/Quiz/Quiz';\nimport Informations from './components/Informations/Informations';\nimport './app.css';\n\nfunction App() {\n  return (\n    <>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/quiz\" component={Quiz} />\n        <Route path=\"/informations\" component={Informations} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}