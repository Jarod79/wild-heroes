{"version":3,"sources":["img/Logo.png","components/Navbar/NavBar.jsx","components/Quiz/QuizQuestion.jsx","components/Quiz/QuizGame.jsx","components/Quiz/CardRandom.jsx","img/interrogation.png","components/Informations/ModalInfo.jsx","components/Quiz/ChallengerCard.jsx","components/Quiz/CardsQuiz.jsx","components/Quiz/Quiz.jsx","components/Home/Home.jsx","components/Informations/Card.jsx","components/Informations/Filter.jsx","components/Informations/CardsList.jsx","components/Informations/Pagination.jsx","components/Informations/SearchBarName.jsx","components/Informations/Informations.jsx","App.jsx","index.jsx"],"names":["Navbar","className","href","src","logo","alt","activeClassName","to","QuizQuestion","question","answers","handleNextQuestion","useState","answerGiven","setAnswerGiven","map","el","role","onClick","setTimeout","style","correctAnswer","correct","backgroundColor","text","QuizGame","questions","setQuestions","nextQuestion","setNextQuestion","isLoading","setIsLoading","useEffect","shuffleArray","array","array2","i","length","j","Math","floor","random","temp","getQuestions","a","axios","get","results","questionsList","push","data","parser","DOMParser","parseFromString","documentElement","textContent","correct_answer","incorrect_answers","CardRandom","hero","setChooseCard","image","name","url","counter","setCounter","interval","setInterval","clearInterval","onKeyPress","tabIndex","ModalInfo","hideModal","alignment","stats","publisher","gender","race","weight","height","fullName","placeOfBirth","firstAppearance","groupAffiliation","statsNamesArray","Object","keys","statsValuesArray","values","statsArray","toUpperCase","headerClass","ali","type","onError","e","target","onerror","imgReplace","stat","index","includes","replace","ChallengerCard","heroRandom","toggleModal","setToggleModal","biography","powerstats","appearance","connections","CardsQuiz","chooseCard","setHero","fetchData","then","response","Quiz","Home","exact","Card","Filter","setFilter","filter","onChange","value","element","id","CardsList","searchName","setByPublisher","setGender","setRace","setAlignment","byPublisher","allRaces","allPublishers","allGenders","allAlignments","toLowerCase","Pagination","cardsPerPage","totalCards","paginate","currentPage","pageNumbers","ceil","number","SearchbarName","handleChange","placeholder","required","Informations","setCurrentPage","setCardsPerPage","indexOfLastCard","indexOfFirstCard","currentHero","slice","setSearchName","pageNumber","document","scrollTop","App","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2ccb092a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo.b43d2c16.png\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport logo from '../../img/Logo.png';\nimport './navbar.css';\n\nconst Navbar = () => {\n  return (\n    <header className=\"header\">\n      <div className=\"header-content\">\n        <a href=\"/home\" className=\"logo-content\">\n          <img src={logo} className=\"logo\" alt=\"Logo\" />\n        </a>\n        <div className=\"title\">\n          <h1>WILD HEROES</h1>\n        </div>\n        <div className=\"header-content-link\">\n          <NavLink\n            activeClassName=\"text-nav-active\"\n            className=\"text-nav\"\n            to=\"/quiz\"\n          >\n            <h3> Quiz</h3>\n          </NavLink>\n          <NavLink\n            activeClassName=\"text-nav-active\"\n            className=\"text-nav\"\n            to=\"/informations\"\n          >\n            <h3> Informations</h3>\n          </NavLink>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Navbar;\n","import React, { useState } from 'react';\nimport './quizQuestion.css';\nimport PropTypes from 'prop-types';\n\nconst QuizQuestion = ({ question, answers, handleNextQuestion }) => {\n  const [answerGiven, setAnswerGiven] = useState(false);\n\n  function styleAnswer(correctAnswer) {\n    let colorAnswer = {};\n    if (answerGiven) {\n      if (correctAnswer) {\n        colorAnswer = { backgroundColor: '#1E7112' };\n      } else {\n        colorAnswer = { backgroundColor: 'rgba(0, 0, 0, 0.7)' };\n      }\n    } else {\n      colorAnswer = { backgroundColor: 'rgba(16, 25, 113, 1)' };\n    }\n    return colorAnswer;\n  }\n  return (\n    <div className=\"quiz\">\n      <div className=\"quiz_question\">{question}</div>\n      <ul className=\"quiz_answers\">\n        {answers.map((el) => (\n          <li\n            key={el.text}\n            role=\"presentation\"\n            className=\"quiz_answer\"\n            onClick={() => {\n              setAnswerGiven(true);\n              setTimeout(() => {\n                handleNextQuestion();\n              }, 3000);\n            }}\n            style={styleAnswer(el.correct)}\n          >\n            {el.text}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nQuizQuestion.propTypes = {\n  question: PropTypes.string.isRequired,\n  answers: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleNextQuestion: PropTypes.func.isRequired,\n};\n\nexport default QuizQuestion;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport QuizQuestion from './QuizQuestion';\n\nfunction QuizGame() {\n  const [questions, setQuestions] = useState([]);\n  const [nextQuestion, setNextQuestion] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const shuffleArray = (array) => {\n      const array2 = array;\n      for (let i = array.length - 1; i > 0; i -= 1) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const temp = array2[i];\n        array2[i] = array2[j];\n        array2[j] = temp;\n      }\n    };\n\n    const getQuestions = async () => {\n      const results = await axios.get(\n        'https://opentdb.com/api.php?amount=1&category=29'\n      );\n      const questionsList = [];\n      setIsLoading(false);\n      questionsList.push(\n        results.data.results.map((el) => {\n          let answers = [];\n          const parser = new DOMParser();\n          const question = {\n            question: parser.parseFromString(el.question, 'text/html')\n              .documentElement.textContent,\n          };\n\n          answers = [\n            {\n              text: parser.parseFromString(el.correct_answer, 'text/html')\n                .documentElement.textContent,\n              correct: true,\n            },\n          ];\n\n          for (let i = 0; i < el.incorrect_answers.length; i += 1) {\n            answers.push({\n              text: parser.parseFromString(el.incorrect_answers[i], 'text/html')\n                .documentElement.textContent,\n            });\n          }\n\n          shuffleArray(answers);\n          question.answers = answers;\n          return question;\n        })\n      );\n      setQuestions(questionsList[0]);\n    };\n\n    getQuestions();\n  }, [nextQuestion]);\n\n  const handleNextQuestion = () => {\n    setNextQuestion(!nextQuestion);\n  };\n  return (\n    <div className=\"quiz-game-containe\">\n      {isLoading ? (\n        <img\n          src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/da734b28921021.55d95297d71f4.gif\"\n          alt=\"loader\"\n          className=\"loader-cardsList\"\n        />\n      ) : (\n        <div className=\"App\">\n          {questions.map((question) => (\n            <QuizQuestion\n              question={question.question}\n              answers={question.answers}\n              key={question.question}\n              handleNextQuestion={handleNextQuestion}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default QuizGame;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './cardQuiz.css';\n\nconst CardRandom = ({ hero, setChooseCard }) => {\n  const image = [];\n  const name = [];\n  const heroRandom = [];\n  heroRandom.push(hero[Math.floor(Math.random() * 732)]);\n  hero.map((el) => image.push(el.image.url));\n  hero.map((el) => name.push(el.name));\n  const [counter, setCounter] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCounter(Math.floor(Math.random() * 732));\n    }, 150);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [counter]);\n  return (\n    <>\n      <div\n        className=\"card-random\"\n        role=\"button\"\n        onClick={() => setChooseCard(false)}\n        onKeyPress={() => setChooseCard(false)}\n        tabIndex={0}\n      >\n        <h2>Choose your challenger</h2>\n        <img src={image[counter]} alt={name[counter]} />\n      </div>\n    </>\n  );\n};\n\nCardRandom.propTypes = {\n  hero: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setChooseCard: PropTypes.func.isRequired,\n};\nexport default CardRandom;\n","export default __webpack_public_path__ + \"static/media/interrogation.1ab396b5.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport imgReplace from '../../img/interrogation.png';\nimport './modalinfo.css';\n\nconst ModalInfo = ({\n  hideModal,\n  image,\n  name,\n  alignment,\n  stats,\n  publisher,\n  gender,\n  race,\n  weight,\n  height,\n  fullName,\n  placeOfBirth,\n  firstAppearance,\n  groupAffiliation,\n}) => {\n  // gathering keys and values of the 'stats' object and putting it in a 'statsArray' array\n  const statsNamesArray = Object.keys(stats);\n  const statsValuesArray = Object.values(stats);\n\n  const statsArray = [];\n  for (let i = 0; i < statsNamesArray.length; i += 1) {\n    statsArray.push(statsNamesArray[i].toUpperCase());\n    statsArray.push(statsValuesArray[i]);\n  }\n  const headerClass = (ali) => {\n    let headerAliClass = '';\n    if (ali === 'good') {\n      headerAliClass = 'good-hero';\n    } else if (ali === 'bad') {\n      headerAliClass = 'bad-hero';\n    } else {\n      headerAliClass = 'neutral-hero';\n    }\n    return headerAliClass;\n  };\n\n  return (\n    <div className=\"modal-container\">\n      <div\n        className=\"modal-background\"\n        onClick={() => hideModal()}\n        onKeyPress={() => hideModal()}\n        role=\"button\"\n        tabIndex={0}\n      >\n        {' '}\n      </div>\n      <div className={`modal-content ${headerClass(alignment)}`}>\n        <button\n          type=\"button\"\n          className=\"close-modal-button\"\n          onClick={() => hideModal()}\n        >\n          &times;\n        </button>\n        <div className={`modal-header ${headerClass(alignment)}`}>\n          <h1>{name}</h1>\n        </div>\n        <div className=\"modal-body\">\n          <div className=\"modal-card\">\n            <img\n              src={image}\n              onError={(e) => {\n                e.target.onerror = null;\n                e.target.src = imgReplace;\n              }}\n              alt={name}\n              className=\"modal-img\"\n            />\n          </div>\n          <div className=\"modal-stats\">\n            <h1>Statistics</h1>\n            <ul className=\"stats-list\">\n              {statsArray.map((stat, index) => (\n                <li key={[index]}>\n                  {stat.includes('null')\n                    ? stat.replace('null', 'Unknown')\n                    : stat}\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div className=\"modal-bio\">\n            <h1>Information</h1>\n            <ul className=\"bio-list\">\n              {fullName !== '' ? (\n                <li>\n                  <strong>\n                    Full name\n                    <br />\n                  </strong>{' '}\n                  {fullName}{' '}\n                </li>\n              ) : (\n                ''\n              )}\n              {gender !== '-' ? (\n                <li>\n                  {' '}\n                  <strong>\n                    Gender\n                    <br />\n                  </strong>{' '}\n                  {gender}{' '}\n                </li>\n              ) : (\n                ''\n              )}\n              {race !== 'null' ? (\n                <li>\n                  {' '}\n                  <strong>\n                    Race\n                    <br />\n                  </strong>{' '}\n                  {race}{' '}\n                </li>\n              ) : (\n                ''\n              )}\n              {weight !== '0 kg' && height !== '0 cm' ? (\n                <li>\n                  {' '}\n                  <strong>\n                    Weight and height\n                    <br />\n                  </strong>{' '}\n                  {weight}, {height}{' '}\n                </li>\n              ) : (\n                ''\n              )}\n              {placeOfBirth !== '-' ? (\n                <li>\n                  {' '}\n                  <strong>\n                    Place of birth\n                    <br />\n                  </strong>{' '}\n                  {placeOfBirth}{' '}\n                </li>\n              ) : (\n                ''\n              )}\n              {publisher !== 'null' && publisher !== '' ? (\n                <li>\n                  {' '}\n                  <strong>\n                    Original publisher\n                    <br />\n                  </strong>{' '}\n                  {publisher}{' '}\n                </li>\n              ) : (\n                ''\n              )}\n              {firstAppearance !== '-' ? (\n                <li>\n                  {' '}\n                  <strong>\n                    First appearance\n                    <br />\n                  </strong>{' '}\n                  {firstAppearance}{' '}\n                </li>\n              ) : (\n                ''\n              )}\n              {groupAffiliation !== '-' ? (\n                <li>\n                  {' '}\n                  <strong>\n                    Affiliation\n                    <br />\n                  </strong>{' '}\n                  {groupAffiliation}{' '}\n                </li>\n              ) : (\n                ''\n              )}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nModalInfo.propTypes = {\n  stats: PropTypes.objectOf(PropTypes.string).isRequired,\n  hideModal: PropTypes.func.isRequired,\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  alignment: PropTypes.string.isRequired,\n  publisher: PropTypes.string.isRequired,\n  gender: PropTypes.string.isRequired,\n  race: PropTypes.string.isRequired,\n  weight: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  fullName: PropTypes.string.isRequired,\n  placeOfBirth: PropTypes.string.isRequired,\n  firstAppearance: PropTypes.string.isRequired,\n  groupAffiliation: PropTypes.string.isRequired,\n};\nexport default ModalInfo;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport imgReplace from '../../img/interrogation.png';\nimport ModalInfo from '../Informations/ModalInfo';\nimport './cardQuiz.css';\n\nconst ChallengerCard = ({ hero }) => {\n  const [heroRandom] = useState([]);\n  heroRandom.push(hero[Math.floor(Math.random() * 732)]);\n  const [toggleModal, setToggleModal] = useState('');\n  const hideModal = () => setToggleModal(!toggleModal);\n\n  return (\n    <div>\n      <div\n        className=\"card-quiz\"\n        onClick={() => hideModal()}\n        onKeyPress={() => hideModal()}\n        role=\"button\"\n        tabIndex={0}\n      >\n        <img\n          src={heroRandom[0].image.url}\n          alt={heroRandom[0].name}\n          onError={(e) => {\n            e.target.onerror = null;\n            e.target.src = imgReplace;\n          }}\n        />\n        <h2>{heroRandom[0].name}</h2>\n      </div>\n      <div>\n        {toggleModal && (\n          <ModalInfo\n            name={heroRandom[0].name}\n            image={heroRandom[0].image.url}\n            toggleModal={toggleModal}\n            setToggleModal={setToggleModal}\n            hideModal={hideModal}\n            alignment={heroRandom[0].biography.alignment}\n            stats={heroRandom[0].powerstats}\n            publisher={heroRandom[0].biography.publisher}\n            gender={heroRandom[0].appearance.gender}\n            race={heroRandom[0].appearance.race}\n            weight={heroRandom[0].appearance.weight[1]}\n            height={heroRandom[0].appearance.height[1]}\n            fullName={heroRandom[0].biography['full-name']}\n            placeOfBirth={heroRandom[0].biography['place-of-birth']}\n            firstAppearance={heroRandom[0].biography['first-appearance']}\n            groupAffiliation={heroRandom[0].connections['group-affiliation']}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nChallengerCard.propTypes = {\n  hero: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\nexport default ChallengerCard;\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport CardRandom from './CardRandom';\nimport ChallengerCard from './ChallengerCard';\nimport './cardQuiz.css';\n\nconst CardsQuiz = ({ setChooseCard, chooseCard }) => {\n  const [hero, setHero] = useState([]);\n\n  // Call the api and load image to waiting call\n  useEffect(() => {\n    const fetchData = async () => {\n      axios\n        .get(\"https://superheroapi.com/api.php/10216027606921557/search/'%20'\")\n        .then((response) => response.data.results)\n        .then((data) => {\n          setHero(data);\n        });\n    };\n    fetchData();\n  }, []);\n  return (\n    <div className=\"card-list\">\n      {chooseCard ? (\n        <CardRandom hero={hero} setChooseCard={setChooseCard} />\n      ) : (\n        <ChallengerCard hero={hero} />\n      )}\n    </div>\n  );\n};\n\nCardsQuiz.propTypes = {\n  chooseCard: PropTypes.bool.isRequired,\n  setChooseCard: PropTypes.func.isRequired,\n};\n\nexport default CardsQuiz;\n","import { useState } from 'react';\nimport Navbar from '../Navbar/NavBar';\nimport QuizGame from './QuizGame';\nimport CardsQuiz from './CardsQuiz';\n\nconst Quiz = () => {\n  const [chooseCard, setChooseCard] = useState(true);\n  return (\n    <div>\n      <Navbar />\n      <CardsQuiz setChooseCard={setChooseCard} chooseCard={chooseCard} />\n      <QuizGame />\n    </div>\n  );\n};\n\nexport default Quiz;\n","import React from 'react';\nimport './home.css';\nimport { NavLink } from 'react-router-dom';\n\nconst Home = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"img\">\n        <NavLink className=\"img-text-left\" exact to=\"/quiz\">\n          <div className=\"img-left\" />\n          <div className=\"text-left\">\n            <h2 className=\"title-home\">Quiz</h2>\n          </div>\n        </NavLink>\n        <NavLink className=\"img-text-right\" exact to=\"/informations\">\n          <div className=\"img-right\" />\n          <div className=\"text-right\">\n            <h2 className=\"title-home\">Informations</h2>\n          </div>\n        </NavLink>\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ModalInfo from './ModalInfo';\nimport imgReplace from '../../img/interrogation.png';\nimport './card.css';\n\nconst Card = ({\n  name,\n  image,\n  alignment,\n  stats,\n  publisher,\n  gender,\n  race,\n  weight,\n  height,\n  fullName,\n  placeOfBirth,\n  firstAppearance,\n  groupAffiliation,\n}) => {\n  const [toggleModal, setToggleModal] = useState(false);\n  const hideModal = () => {\n    setToggleModal(!toggleModal);\n  };\n  const colorClass = (ali) => {\n    let heroClass = '';\n    if (ali === 'good') {\n      heroClass = 'good-card';\n    } else if (ali === 'bad') {\n      heroClass = 'bad-card';\n    } else {\n      heroClass = 'normal-card';\n    }\n    return heroClass;\n  };\n  return (\n    <>\n      <div\n        className={`card ${colorClass(alignment)}`}\n        onClick={() => hideModal()}\n        onKeyPress={() => hideModal()}\n        role=\"button\"\n        tabIndex={0}\n      >\n        <img\n          src={image}\n          onError={(e) => {\n            e.target.onerror = null;\n            e.target.src = imgReplace;\n          }}\n          alt={name}\n        />\n        <h2>{name}</h2>\n      </div>\n      <div>\n        {toggleModal && (\n          <ModalInfo\n            name={name}\n            image={image}\n            toggleModal={toggleModal}\n            setToggleModal={setToggleModal}\n            hideModal={hideModal}\n            alignment={alignment}\n            stats={stats}\n            publisher={publisher}\n            gender={gender}\n            race={race}\n            weight={weight}\n            height={height}\n            fullName={fullName}\n            placeOfBirth={placeOfBirth}\n            firstAppearance={firstAppearance}\n            groupAffiliation={groupAffiliation}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nCard.propTypes = {\n  stats: PropTypes.objectOf(PropTypes.string).isRequired,\n  name: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  alignment: PropTypes.string.isRequired,\n  publisher: PropTypes.string.isRequired,\n  gender: PropTypes.string.isRequired,\n  race: PropTypes.string.isRequired,\n  weight: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  fullName: PropTypes.string.isRequired,\n  placeOfBirth: PropTypes.string.isRequired,\n  firstAppearance: PropTypes.string.isRequired,\n  groupAffiliation: PropTypes.string.isRequired,\n};\nexport default Card;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ setFilter, filter, response }) => {\n  return (\n    <div className=\"boxes\">\n      <select\n        className=\"comics-filter\"\n        onChange={(e) => setFilter(e.target.value)}\n      >\n        <option value=\"\"> {filter} </option>\n        {response.map((element) => (\n          <option key={element.id} value={element.name}>\n            {element.name}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  setFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n  response: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from './Card';\nimport './card.css';\nimport Filter from './Filter';\nimport './filter.css';\n\nconst CardsList = ({\n  hero,\n  isLoading,\n  searchName,\n  setByPublisher,\n  setGender,\n  setRace,\n  setAlignment,\n  byPublisher,\n  gender,\n  race,\n  alignment,\n  allRaces,\n  allPublishers,\n  allGenders,\n  allAlignments,\n}) => {\n  return (\n    <div className=\"cards-list\">\n      {isLoading ? (\n        <img\n          src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/da734b28921021.55d95297d71f4.gif\"\n          alt=\"loader\"\n          className=\"loader-cardsList\"\n        />\n      ) : (\n        <div className=\"container-cards-button\">\n          <div className=\"container-filter\">\n            <Filter\n              setFilter={setGender}\n              filter=\"Gender\"\n              response={allGenders}\n            />\n            <Filter\n              setFilter={setAlignment}\n              filter=\"Alignment\"\n              response={allAlignments}\n            />\n            <Filter\n              setFilter={setByPublisher}\n              filter=\"Publisher\"\n              response={allPublishers}\n            />\n            <Filter setFilter={setRace} filter=\"Race\" response={allRaces} />\n          </div>\n          <div className=\"container-cards\">\n            {hero\n              .filter((el) => el.biography.publisher.includes(byPublisher))\n              .filter((el) => el.appearance.gender.includes(gender))\n              .filter((el) => el.appearance.race.includes(race))\n              .filter((el) => el.biography.alignment.includes(alignment))\n              .filter((el) =>\n                el.name.toLowerCase().includes(searchName.toLowerCase())\n              )\n              .map((el) => (\n                <Card\n                  key={el.id}\n                  name={el.name}\n                  image={el.image.url}\n                  alignment={el.biography.alignment}\n                  stats={el.powerstats}\n                  publisher={el.biography.publisher}\n                  gender={el.appearance.gender}\n                  race={el.appearance.race}\n                  weight={el.appearance.weight[1]}\n                  height={el.appearance.height[1]}\n                  fullName={el.biography['full-name']}\n                  placeOfBirth={el.biography['place-of-birth']}\n                  firstAppearance={el.biography['first-appearance']}\n                  groupAffiliation={el.connections['group-affiliation']}\n                />\n              ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\nCardsList.propTypes = {\n  hero: PropTypes.arrayOf(PropTypes.object).isRequired,\n  allRaces: PropTypes.arrayOf(PropTypes.object).isRequired,\n  allPublishers: PropTypes.arrayOf(PropTypes.object).isRequired,\n  allGenders: PropTypes.arrayOf(PropTypes.object).isRequired,\n  allAlignments: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  searchName: PropTypes.string.isRequired,\n  setByPublisher: PropTypes.func.isRequired,\n  setGender: PropTypes.func.isRequired,\n  setRace: PropTypes.func.isRequired,\n  setAlignment: PropTypes.func.isRequired,\n  byPublisher: PropTypes.string.isRequired,\n  gender: PropTypes.string.isRequired,\n  race: PropTypes.string.isRequired,\n  alignment: PropTypes.string.isRequired,\n};\nexport default CardsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './pagination.css';\nimport { NavLink } from 'react-router-dom';\n\nconst Pagination = ({ cardsPerPage, totalCards, paginate, currentPage }) => {\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(totalCards / cardsPerPage); i += 1) {\n    pageNumbers.push(i);\n  }\n  return (\n    <nav className=\"nav-page\">\n      <p> {cardsPerPage < 31 && `Page: ${currentPage}`}</p>\n      <ul className=\"pagination\">\n        {pageNumbers.map(\n          (number) =>\n            cardsPerPage < 31 && (\n              <NavLink\n                key={number}\n                value={number}\n                to=\"/informations\"\n                className=\"page-link\"\n                onClick={() => {\n                  paginate(number);\n                }}\n              >\n                {number}\n              </NavLink>\n            )\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  cardsPerPage: PropTypes.number.isRequired,\n  totalCards: PropTypes.number.isRequired,\n  paginate: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './searchbarname.css';\n\nconst SearchbarName = ({ handleChange, searchName }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"search\">\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Enter your research\"\n            value={searchName}\n            onChange={handleChange}\n            required\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSearchbarName.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  searchName: PropTypes.string.isRequired,\n};\n\nexport default SearchbarName;\n","import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../Navbar/NavBar';\nimport CardsList from './CardsList';\nimport Pagination from './Pagination';\nimport SearchbarName from './SearchBarName';\nimport './card.css';\n\nconst Informations = () => {\n  const [hero, setHero] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  // UseState for range page\n  const [currentPage, setCurrentPage] = useState(1);\n  // Number of Cards by page\n  const [cardsPerPage, setCardsPerPage] = useState(30);\n  // Filters\n  const [byPublisher, setByPublisher] = useState('');\n  const [gender, setGender] = useState('');\n  const [alignment, setAlignment] = useState('');\n  const [race, setRace] = useState('');\n  // Get current page\n  const indexOfLastCard = currentPage * cardsPerPage;\n  const indexOfFirstCard = indexOfLastCard - cardsPerPage;\n  const currentHero = hero.slice(indexOfFirstCard, indexOfLastCard);\n  // SearchBar\n  const [searchName, setSearchName] = useState('');\n  const handleChange = (e) => {\n    setSearchName(e.target.value);\n  };\n\n  const allRaces = [\n    { id: 0, name: 'Alien' },\n    { id: 1, name: 'Alpha' },\n    { id: 2, name: 'Amazon' },\n    { id: 3, name: 'Android' },\n    { id: 4, name: 'Atlantean' },\n    { id: 5, name: 'Bizarro' },\n    { id: 6, name: 'Black Racer' },\n    { id: 7, name: 'Cosmic Entity' },\n    { id: 8, name: 'Cyborg' },\n    { id: 9, name: 'Dathomirian Zabrak' },\n    { id: 10, name: 'Demon' },\n    { id: 11, name: 'God' },\n    { id: 12, name: 'Human' },\n    { id: 13, name: 'Icthyo Sapien' },\n    { id: 14, name: 'Inhuman' },\n    { id: 15, name: 'Kakarantharaian' },\n    { id: 16, name: 'Kryptonian' },\n    { id: 17, name: 'Metahuman' },\n    { id: 18, name: 'Mutant' },\n    { id: 19, name: 'Neyaphen' },\n    { id: 20, name: 'Symbiote' },\n    { id: 21, name: 'Ungaran' },\n    { id: 22, name: 'Vampire' },\n    { id: 23, name: 'Xenomorph' },\n  ];\n\n  const allPublishers = [\n    { id: 24, name: 'Marvel Comics' },\n    { id: 25, name: 'DC Comics' },\n    { id: 26, name: 'Image Comics' },\n    { id: 27, name: 'Dark Horse' },\n    { id: 28, name: 'NBC - Heroes' },\n    { id: 29, name: 'Sharon Carter' },\n    { id: 30, name: 'Wildstorm' },\n    { id: 31, name: 'Archangel' },\n    { id: 32, name: 'Tempest' },\n    { id: 33, name: 'Image Comics' },\n    { id: 34, name: 'Giant-Man' },\n    { id: 35, name: 'Toxin' },\n    { id: 36, name: 'Angel' },\n    { id: 37, name: 'Speedy' },\n    { id: 38, name: 'Goliath' },\n    { id: 39, name: 'Spectre' },\n    { id: 40, name: 'Oracle' },\n    { id: 41, name: 'Hawkfire' },\n    { id: 42, name: 'Huntress' },\n    { id: 43, name: 'Misfit' },\n    { id: 44, name: 'Spoiler' },\n    { id: 45, name: 'Nightwing' },\n    { id: 46, name: 'Icon Comics' },\n  ];\n\n  const allGenders = [\n    { id: 47, name: 'Male' },\n    { id: 48, name: 'Female' },\n  ];\n\n  const allAlignments = [\n    { id: 49, name: 'good' },\n    { id: 50, name: 'bad' },\n    { id: 51, name: 'neutral' },\n  ];\n\n  // Change page\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    document.documentElement.scrollTop = 0;\n  };\n\n  // Call the api and load image to waiting call\n  useEffect(() => {\n    const fetchData = async () => {\n      axios\n        .get(\"https://superheroapi.com/api.php/10216027606921557/search/'%20'\")\n        .then((response) => response.data.results)\n        .then((data) => {\n          setHero(data);\n          setIsLoading(false);\n        });\n    };\n    fetchData();\n  }, []);\n\n  // change the component according to search state\n  useEffect(() => {\n    if (\n      searchName !== '' ||\n      byPublisher !== '' ||\n      gender !== '' ||\n      race !== '' ||\n      alignment !== ''\n    ) {\n      setCurrentPage(1);\n      setCardsPerPage(hero.length);\n    }\n    return () => {\n      setCardsPerPage(30);\n    };\n  }, [searchName, byPublisher, gender, race, alignment]);\n\n  return (\n    <div>\n      <Navbar />\n      <div>\n        <SearchbarName\n          searchName={searchName}\n          setSearchName={setSearchName}\n          handleChange={handleChange}\n        />\n      </div>\n      <CardsList\n        isLoading={isLoading}\n        searchName={searchName}\n        hero={currentHero}\n        byPublisher={byPublisher}\n        setByPublisher={setByPublisher}\n        gender={gender}\n        setGender={setGender}\n        alignment={alignment}\n        setAlignment={setAlignment}\n        race={race}\n        setRace={setRace}\n        allRaces={allRaces}\n        allPublishers={allPublishers}\n        allGenders={allGenders}\n        allAlignments={allAlignments}\n      />\n\n      <div className=\"container-pagination\">\n        <Pagination\n          currentPage={currentPage}\n          cardsPerPage={cardsPerPage}\n          totalCards={hero.length}\n          paginate={paginate}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Informations;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Quiz from './components/Quiz/Quiz';\nimport Home from './components/Home/Home';\nimport Informations from './components/Informations/Informations';\nimport './app.css';\n\nfunction App() {\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/quiz\" component={Quiz} />\n        <Route path=\"/informations\" component={Informations} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}