{"version":3,"sources":["img/Logo.png","components/Navbar/NavBar.jsx","components/Home/Home.jsx","components/Quiz/Quiz.jsx","components/Informations/ModalInfo.jsx","components/Informations/Card.jsx","components/Informations/Filter.jsx","components/Informations/CardsList.jsx","components/Informations/Pagination.jsx","components/Informations/SearchBarName.jsx","components/Informations/Informations.jsx","App.jsx","index.jsx"],"names":["Navbar","className","href","src","logo","alt","activeClassName","to","Home","Quiz","ModalInfo","hideModal","image","name","alignment","stats","publisher","gender","race","weight","height","fullName","placeOfBirth","firstAppearance","groupAffiliation","statsNamesArray","Object","keys","statsValuesArray","values","statsArray","i","length","push","toUpperCase","headerClass","ali","onClick","onKeyPress","role","tabIndex","type","map","stat","includes","replace","indexOf","Card","useState","toggleModal","setToggleModal","Filter","setFilter","filter","response","onChange","e","target","value","element","CardsList","hero","isLoading","searchName","setByPublisher","setGender","setRace","setAlignment","byPublisher","el","biography","appearance","toLowerCase","url","powerstats","connections","id","Pagination","cardsPerPage","totalCards","paginate","currentPage","pageNumbers","Math","ceil","number","SearchbarName","handleChange","htmlFor","placeholder","Informations","setHero","setIsLoading","setCurrentPage","setCardsPerPage","indexOfLastCard","indexOfFirstCard","currentHero","slice","setSearchName","useEffect","axios","get","then","data","results","pageNumber","document","documentElement","scrollTop","App","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"+TAAe,MAA0B,iC,eCoC1BA,EA/BA,WACb,OACE,wBAAQC,UAAU,SAAlB,SACE,sBAAKA,UAAU,iBAAf,UACE,mBAAGC,KAAK,gBAAgBD,UAAU,eAAlC,SACE,qBAAKE,IAAKC,EAAMH,UAAU,OAAOI,IAAI,WAEvC,qBAAKJ,UAAU,QAAf,SACE,+CAEF,sBAAKA,UAAU,sBAAf,UACE,cAAC,IAAD,CACEK,gBAAgB,kBAChBL,UAAU,WACVM,GAAG,QAHL,kBAOA,cAAC,IAAD,CACED,gBAAgB,kBAChBL,UAAU,WACVM,GAAG,gBAHL,mCClBKC,EAHF,WACX,OAAO,qCCEMC,EAHF,WACX,OAAO,qC,wBCqMMC,G,MApMG,SAAC,GAqBjB,IANK,IAdLC,EAcI,EAdJA,UACAC,EAaI,EAbJA,MACAC,EAYI,EAZJA,KACAC,EAWI,EAXJA,UACAC,EAUI,EAVJA,MACAC,EASI,EATJA,UACAC,EAQI,EARJA,OACAC,EAOI,EAPJA,KACAC,EAMI,EANJA,OACAC,EAKI,EALJA,OACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,iBAGMC,EAAkBC,OAAOC,KAAKZ,GAC9Ba,EAAmBF,OAAOG,OAAOd,GACjCe,EAAa,GAEVC,EAAI,EAAGA,EAAIN,EAAgBO,OAAQD,GAAK,EAC/CD,EAAWG,KAAKR,EAAgBM,GAAGG,eACnCJ,EAAWG,KAAKL,EAAiBG,IAEnC,IAAMI,EAAc,SAACC,GASnB,MAPY,SAARA,EACe,YACA,QAARA,EACQ,WAEA,gBAKrB,OACE,sBAAKnC,UAAU,kBAAf,UACE,qBACEA,UAAU,mBACVoC,QAAS,kBAAM1B,KACf2B,WAAY,kBAAM3B,KAClB4B,KAAK,SACLC,SAAU,EALZ,SAOG,MAEH,sBAAKvC,UAAS,wBAAmBkC,EAAYrB,IAA7C,UACE,wBACE2B,KAAK,SACLxC,UAAU,qBACVoC,QAAS,kBAAM1B,KAHjB,kBAOA,qBAAKV,UAAS,uBAAkBkC,EAAYrB,IAA5C,SACE,6BAAKD,MAEP,sBAAKZ,UAAU,aAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAKE,IAAKS,EAAOP,IAAKQ,EAAMZ,UAAU,gBAExC,sBAAKA,UAAU,cAAf,UACE,4CACA,oBAAIA,UAAU,aAAd,SACG6B,EAAWY,KAAI,SAACC,GAAD,OACd,6BACGA,EAAKC,SAAS,QACXD,EAAKE,QAAQ,OAAQ,WACrBF,GAHGb,EAAWgB,QAAQH,YAQlC,sBAAK1C,UAAU,YAAf,UACE,6CACA,qBAAIA,UAAU,WAAd,UACgB,KAAboB,EACC,+BACE,+CAEE,0BACQ,IACTA,EAAU,OAGb,GAEU,MAAXJ,EACC,+BACG,IACD,4CAEE,0BACQ,IACTA,EAAQ,OAGX,GAEQ,SAATC,EACC,+BACG,IACD,0CAEE,0BACQ,IACTA,EAAM,OAGT,GAEU,SAAXC,GAAgC,SAAXC,EACpB,+BACG,IACD,uDAEE,0BACQ,IACTD,EANH,KAMaC,EAAQ,OAGrB,GAEgB,MAAjBE,EACC,+BACG,IACD,oDAEE,0BACQ,IACTA,EAAc,OAGjB,GAEa,SAAdN,GAAsC,KAAdA,EACvB,+BACG,IACD,wDAEE,0BACQ,IACTA,EAAW,OAGd,GAEmB,MAApBO,EACC,+BACG,IACD,sDAEE,0BACQ,IACTA,EAAiB,OAGpB,GAEoB,MAArBC,EACC,+BACG,IACD,iDAEE,0BACQ,IACTA,EAAkB,OAGrB,oBCvFDuB,G,MAnFF,SAAC,GAcP,IAKeX,EAlBpBvB,EAaI,EAbJA,KACAD,EAYI,EAZJA,MACAE,EAWI,EAXJA,UACAC,EAUI,EAVJA,MACAC,EASI,EATJA,UACAC,EAQI,EARJA,OACAC,EAOI,EAPJA,KACAC,EAMI,EANJA,OACAC,EAKI,EALJA,OACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,iBAEA,EAAsCwB,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACMvC,EAAY,WAChBuC,GAAgBD,IAalB,OACE,qCACE,sBACEhD,UAAS,gBAdKmC,EAcgBtB,EAZtB,SAARsB,EACU,YACK,QAARA,EACG,WAEA,gBAQVC,QAAS,kBAAM1B,KACf2B,WAAY,kBAAM3B,KAClB4B,KAAK,SACLC,SAAU,EALZ,UAOE,qBAAKrC,IAAKS,EAAOP,IAAKQ,IACtB,6BAAKA,OAEP,8BACGoC,GACC,cAAC,EAAD,CACEpC,KAAMA,EACND,MAAOA,EACPqC,YAAaA,EACbC,eAAgBA,EAChBvC,UAAWA,EACXG,UAAWA,EACXC,MAAOA,EACPC,UAAWA,EACXC,OAAQA,EACRC,KAAMA,EACNC,OAAQA,EACRC,OAAQA,EACRC,SAAUA,EACVC,aAAcA,EACdC,gBAAiBA,EACjBC,iBAAkBA,WCtCf2B,EAxBA,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SACnC,OACE,qBAAKrD,UAAU,QAAf,SACE,yBACEA,UAAU,gBACVsD,SAAU,SAACC,GAAD,OAAOJ,EAAUI,EAAEC,OAAOC,QAFtC,UAIE,yBAAQA,MAAM,GAAd,cAAmBL,EAAnB,OACCC,EAASZ,KAAI,SAACiB,GAAD,OACZ,wBAAwCD,MAAOC,EAA/C,SACGA,GADUL,EAASR,QAAQa,aCyIzBC,G,MA9IG,SAAC,GAYZ,IAXLC,EAWI,EAXJA,KACAC,EAUI,EAVJA,UACAC,EASI,EATJA,WACAC,EAQI,EARJA,eACAC,EAOI,EAPJA,UACAC,EAMI,EANJA,QACAC,EAKI,EALJA,aACAC,EAII,EAJJA,YACAnD,EAGI,EAHJA,OACAC,EAEI,EAFJA,KACAJ,EACI,EADJA,UAEA,OACE,qBAAKb,UAAU,aAAf,SACG6D,EACC,qBACE3D,IAAI,0FACJE,IAAI,SACJJ,UAAU,qBAGZ,sBAAKA,UAAU,yBAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,cAAC,EAAD,CACEmD,UAAWa,EACXZ,OAAO,YACPC,SAAU,CAAC,OAAQ,YAErB,cAAC,EAAD,CACEF,UAAWY,EACXX,OAAO,eACPC,SAAU,CACR,gBACA,YACA,eACA,aACA,eACA,gBACA,YACA,YACA,UACA,eACA,YACA,QACA,QACA,SACA,UACA,UACA,SACA,WACA,WACA,SACA,UACA,YACA,iBAIJ,cAAC,EAAD,CACEF,UAAWc,EACXb,OAAO,UACPC,SAAU,CACR,QACA,gBACA,UACA,gBACA,SACA,YACA,UACA,UACA,SACA,MACA,WACA,YACA,QACA,WACA,QACA,UACA,UACA,YACA,QACA,qBACA,SACA,aACA,kBACA,iBAGJ,cAAC,EAAD,CACEF,UAAWe,EACXd,OAAO,eACPC,SAAU,CAAC,OAAQ,MAAO,gBAG9B,sBAAKrD,UAAU,kBAAf,UACG4D,EACER,QAAO,SAACgB,GAAD,OAAQA,EAAGC,UAAUtD,UAAU4B,SAASwB,MAC/Cf,QAAO,SAACgB,GAAD,OAAQA,EAAGE,WAAWtD,OAAO2B,SAAS3B,MAC7CoC,QAAO,SAACgB,GAAD,OAAQA,EAAGE,WAAWrD,KAAK0B,SAAS1B,MAC3CmC,QAAO,SAACgB,GAAD,OAAQA,EAAGC,UAAUxD,UAAU8B,SAAS9B,MAC/CuC,QAAO,SAACgB,GAAD,OACNA,EAAGxD,KAAK2D,cAAc5B,SAASmB,EAAWS,kBAE3C9B,KAAI,SAAC2B,GAAD,OACH,cAAC,EAAD,CAEExD,KAAMwD,EAAGxD,KACTD,MAAOyD,EAAGzD,MAAM6D,IAChB3D,UAAWuD,EAAGC,UAAUxD,UACxBC,MAAOsD,EAAGK,WACV1D,UAAWqD,EAAGC,UAAUtD,UACxBC,OAAQoD,EAAGE,WAAWtD,OACtBC,KAAMmD,EAAGE,WAAWrD,KACpBC,OAAQkD,EAAGE,WAAWpD,OAAO,GAC7BC,OAAQiD,EAAGE,WAAWnD,OAAO,GAC7BC,SAAUgD,EAAGC,UAAU,aACvBhD,aAAc+C,EAAGC,UAAU,kBAC3B/C,gBAAiB8C,EAAGC,UAAU,oBAC9B9C,iBAAkB6C,EAAGM,YAAY,sBAb5BN,EAAGO,OAXhB,eC9DKC,G,MApCI,SAAC,GAElB,IAF2E,IAAvDC,EAAsD,EAAtDA,aAAcC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAClDC,EAAc,GACXnD,EAAI,EAAGA,GAAKoD,KAAKC,KAAKL,EAAaD,GAAe/C,GAAK,EAC9DmD,EAAYjD,KAAKF,GAEnB,OACE,sBAAK9B,UAAU,WAAf,UACE,kCAAK6E,EAAe,IAAf,gBAA8BG,MACnC,oBAAIhF,UAAU,aAAd,SACGiF,EAAYxC,KAAI,SAAC2C,GAAD,OACf,oBAAiBpF,UAAU,YAA3B,SACG6E,EAAe,IACd,uBACEvE,GAAG,IACHmD,MAAO2B,EACP5C,KAAK,SACLJ,QAAS,WACP2C,EAASK,IAEXpF,UAAU,eATPoF,aCWJC,G,MArBO,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,aAAcxB,EAAiB,EAAjBA,WACrC,OACE,qBAAK9D,UAAU,SAAf,SACE,uBAAOuF,QAAQ,YAAf,SACE,uBACEvF,UAAU,YACVwC,KAAK,OACLiB,MAAOK,EACP0B,YAAY,gCACZlC,SAAUgC,UC4GLG,EAlHM,WACnB,MAAwB1C,mBAAS,IAAjC,mBAAOa,EAAP,KAAa8B,EAAb,KAEA,EAAkC3C,oBAAS,GAA3C,mBAAOc,EAAP,KAAkB8B,EAAlB,KAEA,EAAsC5C,mBAAS,GAA/C,mBAAOiC,EAAP,KAAoBY,EAApB,KAEA,EAAwC7C,mBAAS,IAAjD,mBAAO8B,EAAP,KAAqBgB,EAArB,KAEA,EAAsC9C,mBAAS,IAA/C,mBAAOoB,EAAP,KAAoBJ,EAApB,KACA,EAA4BhB,mBAAS,IAArC,mBAAO/B,EAAP,KAAegD,EAAf,KACA,EAAkCjB,mBAAS,IAA3C,mBAAOlC,EAAP,KAAkBqD,EAAlB,KACA,EAAwBnB,mBAAS,IAAjC,mBAAO9B,EAAP,KAAagD,EAAb,KAEM6B,EAAkBd,EAAcH,EAChCkB,EAAmBD,EAAkBjB,EACrCmB,EAAcpC,EAAKqC,MAAMF,EAAkBD,GAEjD,EAAoC/C,mBAAS,IAA7C,mBAAOe,EAAP,KAAmBoC,EAAnB,KA6DA,OAjDAC,qBAAU,WACJtC,GACFuC,IACGC,IAAI,mEACJC,MAAK,SAACjD,GAAD,OAAcA,EAASkD,KAAKC,WACjCF,MAAK,SAACC,GACLb,EAAQa,GACRZ,GAAa,QAGlB,CAAC/B,IAEJuC,qBAAU,WACW,KAAfrC,GACF8B,EAAe,GACfC,EAAgBjC,EAAK7B,SAErB8D,EAAgB,MAEjB,CAAC/B,IAEJqC,qBAAU,WACY,KAAhBhC,IACFyB,EAAe,GACfC,EAAgBjC,EAAK7B,WAEtB,CAACoC,IAEJgC,qBAAU,WACO,KAAXnF,IACF4E,EAAe,GACfC,EAAgBjC,EAAK7B,WAEtB,CAACf,IAEJmF,qBAAU,WACU,KAAdtF,IACF+E,EAAe,GACfC,EAAgBjC,EAAK7B,WAEtB,CAAClB,IAEJsF,qBAAU,WACK,KAATlF,IACF2E,EAAe,GACfC,EAAgBjC,EAAK7B,WAEtB,CAACd,IAGF,gCACE,8BACE,cAAC,EAAD,CACE6C,WAAYA,EACZoC,cAAeA,EACfZ,aAlEa,SAAC/B,GACpB2C,EAAc3C,EAAEC,OAAOC,YAoErB,cAAC,EAAD,CACEK,WAAYA,EACZD,UAAWA,EACXD,KAAMoC,EACN7B,YAAaA,EACbJ,eAAgBA,EAChB/C,OAAQA,EACRgD,UAAWA,EACXnD,UAAWA,EACXqD,aAAcA,EACdjD,KAAMA,EACNgD,QAASA,IAGX,qBAAKjE,UAAU,uBAAf,SACE,cAAC,EAAD,CACEgF,YAAaA,EACbH,aAAcA,EACdC,WAAYlB,EAAK7B,OACjBgD,SAnFS,SAAC0B,GAChBb,EAAea,GACfC,SAASC,gBAAgBC,UAAY,W,MCZ1BC,MAbf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,gBAAgBC,UAAWzG,IAC7C,cAAC,IAAD,CAAOwG,KAAK,QAAQC,UAAWxG,IAC/B,cAAC,IAAD,CAAOuG,KAAK,gBAAgBC,UAAWvB,WCX/CwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFT,SAASU,eAAe,W","file":"static/js/main.5f41f0bd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo.b43d2c16.png\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport logo from '../../img/Logo.png';\nimport './navbar.css';\n\nconst Navbar = () => {\n  return (\n    <header className=\"header\">\n      <div className=\"header-content\">\n        <a href=\"/wild-heroes/\" className=\"logo-content\">\n          <img src={logo} className=\"logo\" alt=\"Logo\" />\n        </a>\n        <div className=\"title\">\n          <h1>WILD HEROES</h1>\n        </div>\n        <div className=\"header-content-link\">\n          <NavLink\n            activeClassName=\"text-nav-active\"\n            className=\"text-nav\"\n            to=\"/quiz\"\n          >\n            Quiz\n          </NavLink>\n          <NavLink\n            activeClassName=\"text-nav-active\"\n            className=\"text-nav\"\n            to=\"/informations\"\n          >\n            Informations\n          </NavLink>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\n\nconst Home = () => {\n  return <div> </div>;\n};\nexport default Home;\n","import React from 'react';\n\nconst Quiz = () => {\n  return <div> </div>;\n};\nexport default Quiz;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './modalinfo.css';\n\nconst ModalInfo = ({\n  hideModal,\n  image,\n  name,\n  alignment,\n  stats,\n  publisher,\n  gender,\n  race,\n  weight,\n  height,\n  fullName,\n  placeOfBirth,\n  firstAppearance,\n  groupAffiliation,\n}) => {\n  // gathering keys and values of the 'stats' object and putting it in a 'statsArray' array\n  const statsNamesArray = Object.keys(stats);\n  const statsValuesArray = Object.values(stats);\n  const statsArray = [];\n\n  for (let i = 0; i < statsNamesArray.length; i += 1) {\n    statsArray.push(statsNamesArray[i].toUpperCase());\n    statsArray.push(statsValuesArray[i]);\n  }\n  const headerClass = (ali) => {\n    let headerAliClass = '';\n    if (ali === 'good') {\n      headerAliClass = 'good-hero';\n    } else if (ali === 'bad') {\n      headerAliClass = 'bad-hero';\n    } else {\n      headerAliClass = 'neutral-hero';\n    }\n    return headerAliClass;\n  };\n\n  return (\n    <div className=\"modal-container\">\n      <div\n        className=\"modal-background\"\n        onClick={() => hideModal()}\n        onKeyPress={() => hideModal()}\n        role=\"button\"\n        tabIndex={0}\n      >\n        {' '}\n      </div>\n      <div className={`modal-content ${headerClass(alignment)}`}>\n        <button\n          type=\"button\"\n          className=\"close-modal-button\"\n          onClick={() => hideModal()}\n        >\n          &times;\n        </button>\n        <div className={`modal-header ${headerClass(alignment)}`}>\n          <h1>{name}</h1>\n        </div>\n        <div className=\"modal-body\">\n          <div className=\"modal-card\">\n            <img src={image} alt={name} className=\"modal-img\" />\n          </div>\n          <div className=\"modal-stats\">\n            <h1>Statistics</h1>\n            <ul className=\"stats-list\">\n              {statsArray.map((stat) => (\n                <li key={statsArray.indexOf(stat)}>\n                  {stat.includes('null')\n                    ? stat.replace('null', 'Unknown')\n                    : stat}\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div className=\"modal-bio\">\n            <h1>Information</h1>\n            <ul className=\"bio-list\">\n              {fullName !== '' ? (\n                <li>\n                  <strong>\n                    Full name\n                    <br />\n                  </strong>{' '}\n                  {fullName}{' '}\n                </li>\n              ) : (\n                ''\n              )}\n              {gender !== '-' ? (\n                <li>\n                  {' '}\n                  <strong>\n                    Gender\n                    <br />\n                  </strong>{' '}\n                  {gender}{' '}\n                </li>\n              ) : (\n                ''\n              )}\n              {race !== 'null' ? (\n                <li>\n                  {' '}\n                  <strong>\n                    Race\n                    <br />\n                  </strong>{' '}\n                  {race}{' '}\n                </li>\n              ) : (\n                ''\n              )}\n              {weight !== '0 kg' && height !== '0 cm' ? (\n                <li>\n                  {' '}\n                  <strong>\n                    Weight and height\n                    <br />\n                  </strong>{' '}\n                  {weight}, {height}{' '}\n                </li>\n              ) : (\n                ''\n              )}\n              {placeOfBirth !== '-' ? (\n                <li>\n                  {' '}\n                  <strong>\n                    Place of birth\n                    <br />\n                  </strong>{' '}\n                  {placeOfBirth}{' '}\n                </li>\n              ) : (\n                ''\n              )}\n              {publisher !== 'null' && publisher !== '' ? (\n                <li>\n                  {' '}\n                  <strong>\n                    Original publisher\n                    <br />\n                  </strong>{' '}\n                  {publisher}{' '}\n                </li>\n              ) : (\n                ''\n              )}\n              {firstAppearance !== '-' ? (\n                <li>\n                  {' '}\n                  <strong>\n                    First appearance\n                    <br />\n                  </strong>{' '}\n                  {firstAppearance}{' '}\n                </li>\n              ) : (\n                ''\n              )}\n              {groupAffiliation !== '-' ? (\n                <li>\n                  {' '}\n                  <strong>\n                    Affiliation\n                    <br />\n                  </strong>{' '}\n                  {groupAffiliation}{' '}\n                </li>\n              ) : (\n                ''\n              )}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nModalInfo.propTypes = {\n  stats: PropTypes.objectOf(PropTypes.string).isRequired,\n  hideModal: PropTypes.func.isRequired,\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  alignment: PropTypes.string.isRequired,\n  publisher: PropTypes.string.isRequired,\n  gender: PropTypes.string.isRequired,\n  race: PropTypes.string.isRequired,\n  weight: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  fullName: PropTypes.string.isRequired,\n  placeOfBirth: PropTypes.string.isRequired,\n  firstAppearance: PropTypes.string.isRequired,\n  groupAffiliation: PropTypes.string.isRequired,\n};\nexport default ModalInfo;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ModalInfo from './ModalInfo';\nimport './card.css';\n\nconst Card = ({\n  name,\n  image,\n  alignment,\n  stats,\n  publisher,\n  gender,\n  race,\n  weight,\n  height,\n  fullName,\n  placeOfBirth,\n  firstAppearance,\n  groupAffiliation,\n}) => {\n  const [toggleModal, setToggleModal] = useState(false);\n  const hideModal = () => {\n    setToggleModal(!toggleModal);\n  };\n  const colorClass = (ali) => {\n    let heroClass = '';\n    if (ali === 'good') {\n      heroClass = 'good-card';\n    } else if (ali === 'bad') {\n      heroClass = 'bad-card';\n    } else {\n      heroClass = 'normal-card';\n    }\n    return heroClass;\n  };\n  return (\n    <>\n      <div\n        className={`card ${colorClass(alignment)}`}\n        onClick={() => hideModal()}\n        onKeyPress={() => hideModal()}\n        role=\"button\"\n        tabIndex={0}\n      >\n        <img src={image} alt={name} />\n        <h2>{name}</h2>\n      </div>\n      <div>\n        {toggleModal && (\n          <ModalInfo\n            name={name}\n            image={image}\n            toggleModal={toggleModal}\n            setToggleModal={setToggleModal}\n            hideModal={hideModal}\n            alignment={alignment}\n            stats={stats}\n            publisher={publisher}\n            gender={gender}\n            race={race}\n            weight={weight}\n            height={height}\n            fullName={fullName}\n            placeOfBirth={placeOfBirth}\n            firstAppearance={firstAppearance}\n            groupAffiliation={groupAffiliation}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nCard.propTypes = {\n  stats: PropTypes.objectOf(PropTypes.string).isRequired,\n  name: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  alignment: PropTypes.string.isRequired,\n  publisher: PropTypes.string.isRequired,\n  gender: PropTypes.string.isRequired,\n  race: PropTypes.string.isRequired,\n  weight: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  fullName: PropTypes.string.isRequired,\n  placeOfBirth: PropTypes.string.isRequired,\n  firstAppearance: PropTypes.string.isRequired,\n  groupAffiliation: PropTypes.string.isRequired,\n};\nexport default Card;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ setFilter, filter, response }) => {\n  return (\n    <div className=\"boxes\">\n      <select\n        className=\"comics-filter\"\n        onChange={(e) => setFilter(e.target.value)}\n      >\n        <option value=\"\"> {filter} </option>\n        {response.map((element) => (\n          <option key={response.indexOf(element)} value={element}>\n            {element}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  setFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n  response: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from './Card';\nimport './card.css';\nimport Filter from './Filter';\nimport './filter.css';\n\nconst CardsList = ({\n  hero,\n  isLoading,\n  searchName,\n  setByPublisher,\n  setGender,\n  setRace,\n  setAlignment,\n  byPublisher,\n  gender,\n  race,\n  alignment,\n}) => {\n  return (\n    <div className=\"cards-list\">\n      {isLoading ? (\n        <img\n          src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/da734b28921021.55d95297d71f4.gif\"\n          alt=\"loader\"\n          className=\"loader-cardsList\"\n        />\n      ) : (\n        <div className=\"container-cards-button\">\n          <div className=\"container-filter\">\n            <Filter\n              setFilter={setGender}\n              filter=\"by gender\"\n              response={['Male', 'Female']}\n            />\n            <Filter\n              setFilter={setByPublisher}\n              filter=\"by publisher\"\n              response={[\n                'Marvel Comics',\n                'DC Comics',\n                'Image Comics',\n                'Dark Horse',\n                'NBC - Heroes',\n                'Sharon Carter',\n                'Wildstorm',\n                'Archangel',\n                'Tempest',\n                'Image Comics',\n                'Giant-Man',\n                'Toxin',\n                'Angel',\n                'Speedy',\n                'Goliath',\n                'Spectre',\n                'Oracle',\n                'Hawkfire',\n                'Huntress',\n                'Misfit',\n                'Spoiler',\n                'Nightwing',\n                'Icon Comics',\n              ]}\n            />\n\n            <Filter\n              setFilter={setRace}\n              filter=\"by race\"\n              response={[\n                'Human',\n                'Icthyo Sapien',\n                'Ungaran',\n                'Cosmic Entity',\n                'Cyborg',\n                'Xenomorph',\n                'Android',\n                'Vampire',\n                'Mutant',\n                'God',\n                'Symbiote',\n                'Atlantean',\n                'Alien',\n                'Neyaphen',\n                'Alpha',\n                'Bizarro',\n                'Inhuman',\n                'Metahuman',\n                'Demon',\n                'Dathomirian Zabrak',\n                'Amazon',\n                'Kryptonian',\n                'Kakarantharaian',\n                'Black Racer',\n              ]}\n            />\n            <Filter\n              setFilter={setAlignment}\n              filter=\"by alignment\"\n              response={['good', 'bad', 'neutral']}\n            />\n          </div>\n          <div className=\"container-cards\">\n            {hero\n              .filter((el) => el.biography.publisher.includes(byPublisher))\n              .filter((el) => el.appearance.gender.includes(gender))\n              .filter((el) => el.appearance.race.includes(race))\n              .filter((el) => el.biography.alignment.includes(alignment))\n              .filter((el) =>\n                el.name.toLowerCase().includes(searchName.toLowerCase())\n              )\n              .map((el) => (\n                <Card\n                  key={el.id}\n                  name={el.name}\n                  image={el.image.url}\n                  alignment={el.biography.alignment}\n                  stats={el.powerstats}\n                  publisher={el.biography.publisher}\n                  gender={el.appearance.gender}\n                  race={el.appearance.race}\n                  weight={el.appearance.weight[1]}\n                  height={el.appearance.height[1]}\n                  fullName={el.biography['full-name']}\n                  placeOfBirth={el.biography['place-of-birth']}\n                  firstAppearance={el.biography['first-appearance']}\n                  groupAffiliation={el.connections['group-affiliation']}\n                />\n              ))}\n            ))\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\nCardsList.propTypes = {\n  hero: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  searchName: PropTypes.string.isRequired,\n  setByPublisher: PropTypes.func.isRequired,\n  setGender: PropTypes.func.isRequired,\n  setRace: PropTypes.func.isRequired,\n  setAlignment: PropTypes.func.isRequired,\n  byPublisher: PropTypes.string.isRequired,\n  gender: PropTypes.string.isRequired,\n  race: PropTypes.string.isRequired,\n  alignment: PropTypes.string.isRequired,\n};\nexport default CardsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './pagination.css';\n\nconst Pagination = ({ cardsPerPage, totalCards, paginate, currentPage }) => {\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(totalCards / cardsPerPage); i += 1) {\n    pageNumbers.push(i);\n  }\n  return (\n    <nav className=\"nav-page\">\n      <p> {cardsPerPage < 31 && `Page: ${currentPage}`}</p>\n      <ul className=\"pagination\">\n        {pageNumbers.map((number) => (\n          <li key={number} className=\"page-item\">\n            {cardsPerPage < 31 && (\n              <input\n                to=\"/\"\n                value={number}\n                type=\"button\"\n                onClick={() => {\n                  paginate(number);\n                }}\n                className=\"page-link\"\n              />\n            )}\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  cardsPerPage: PropTypes.number.isRequired,\n  totalCards: PropTypes.number.isRequired,\n  paginate: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './searchbarname.css';\n\nconst SearchbarName = ({ handleChange, searchName }) => {\n  return (\n    <div className=\"search\">\n      <label htmlFor=\"inputName\">\n        <input\n          className=\"inputName\"\n          type=\"text\"\n          value={searchName}\n          placeholder=\"Enter the name of a character\"\n          onChange={handleChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nSearchbarName.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  searchName: PropTypes.string.isRequired,\n};\n\nexport default SearchbarName;\n","import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport CardsList from './CardsList';\nimport Pagination from './Pagination';\nimport SearchbarName from './SearchBarName';\nimport './card.css';\n\nconst Informations = () => {\n  const [hero, setHero] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(true);\n  // UseState for range page\n  const [currentPage, setCurrentPage] = useState(1);\n  // Number of Cards by page\n  const [cardsPerPage, setCardsPerPage] = useState(30);\n  // Filters\n  const [byPublisher, setByPublisher] = useState('');\n  const [gender, setGender] = useState('');\n  const [alignment, setAlignment] = useState('');\n  const [race, setRace] = useState('');\n  // Get current page\n  const indexOfLastCard = currentPage * cardsPerPage;\n  const indexOfFirstCard = indexOfLastCard - cardsPerPage;\n  const currentHero = hero.slice(indexOfFirstCard, indexOfLastCard);\n  // SearchBar\n  const [searchName, setSearchName] = useState('');\n  const handleChange = (e) => {\n    setSearchName(e.target.value);\n  };\n\n  // Change page\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    document.documentElement.scrollTop = 0;\n  };\n\n  // Call the api and load image to waiting call\n  useEffect(() => {\n    if (isLoading) {\n      axios\n        .get(\"https://superheroapi.com/api.php/10216027606921557/search/'%20'\")\n        .then((response) => response.data.results)\n        .then((data) => {\n          setHero(data);\n          setIsLoading(false);\n        });\n    }\n  }, [hero]);\n  // change the component according to searchname state\n  useEffect(() => {\n    if (searchName !== '') {\n      setCurrentPage(1);\n      setCardsPerPage(hero.length);\n    } else {\n      setCardsPerPage(30);\n    }\n  }, [searchName]);\n\n  useEffect(() => {\n    if (byPublisher !== '') {\n      setCurrentPage(1);\n      setCardsPerPage(hero.length);\n    }\n  }, [byPublisher]);\n\n  useEffect(() => {\n    if (gender !== '') {\n      setCurrentPage(1);\n      setCardsPerPage(hero.length);\n    }\n  }, [gender]);\n\n  useEffect(() => {\n    if (alignment !== '') {\n      setCurrentPage(1);\n      setCardsPerPage(hero.length);\n    }\n  }, [alignment]);\n\n  useEffect(() => {\n    if (race !== '') {\n      setCurrentPage(1);\n      setCardsPerPage(hero.length);\n    }\n  }, [race]);\n\n  return (\n    <div>\n      <div>\n        <SearchbarName\n          searchName={searchName}\n          setSearchName={setSearchName}\n          handleChange={handleChange}\n        />\n      </div>\n      <CardsList\n        searchName={searchName}\n        isLoading={isLoading}\n        hero={currentHero}\n        byPublisher={byPublisher}\n        setByPublisher={setByPublisher}\n        gender={gender}\n        setGender={setGender}\n        alignment={alignment}\n        setAlignment={setAlignment}\n        race={race}\n        setRace={setRace}\n      />\n\n      <div className=\"container-pagination\">\n        <Pagination\n          currentPage={currentPage}\n          cardsPerPage={cardsPerPage}\n          totalCards={hero.length}\n          paginate={paginate}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Informations;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/Navbar/NavBar';\nimport Home from './components/Home/Home';\nimport Quiz from './components/Quiz/Quiz';\nimport Informations from './components/Informations/Informations';\nimport './app.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/wild-heroes/\" component={Home} />\n        <Route path=\"/quiz\" component={Quiz} />\n        <Route path=\"/informations\" component={Informations} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}